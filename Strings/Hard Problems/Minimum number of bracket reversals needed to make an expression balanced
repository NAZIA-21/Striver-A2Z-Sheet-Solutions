//Approach 1 :
//TC : O(n)
//SC : O(1)
class Solution {
    public int minAddToMakeValid(String s) {
        int open = 0;
        int close = 0;

        for(int i= 0; i < s.length(); i++){
            if(s.charAt(i) == '('){
                open++;
            } else{
                if(open > 0){
                    open--;
                } else{
                    close++;
                }
            }
        }
        return open + close;
    }
}

//Approach 2: Stack
//TC : O(n)
//SC : O(n)
class Solution {
    public int minAddToMakeValid(String s) {
        Stack<Character> stack = new Stack<>();
        int close = 0;

        for(char ch : s.toCharArray()){
            if(ch == '('){
                stack.push(ch);
            } else{
                if(stack.empty()){
                    close++;
                } else{
                    stack.pop();
                }
            }
        }
        return close + stack.size();
    }
}
