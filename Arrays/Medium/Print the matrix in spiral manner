class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        if(matrix.length == 0) return new ArrayList<>();

        List<Integer> res= new ArrayList<>();

        int m= matrix.length;
        int n= matrix[0].length;

        int row1= 0;
        int row2= m-1;
        int col1= 0;
        int col2= n-1;

        while(res.size() < m*n){
            //right--> left
            for(int j=col1 ; j<= col2 && res.size()< m*n; j++){
                res.add(matrix[row1][j]);
            }

            //top--> bottom
            for(int i=row1+1 ; i<= row2-1 && res.size()< m*n; i++){
                res.add(matrix[i][col2]);
            }

            //left-->right
            for(int j=col2 ; j>=col1 && res.size()< m*n; j--){
                res.add(matrix[row2][j]);
            }

            //bottom-->top
            for(int i=row2-1 ; i>= row1+1 && res.size()< m*n; i--){
                res.add(matrix[i][col1]);
            }
            row1++;
            col1++;
            row2--;
            col2--;

        }
        return res;
    }
}
