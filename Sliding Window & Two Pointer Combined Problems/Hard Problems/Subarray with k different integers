class Solution {
    public int subarraysWithKDistinct(int[] nums, int k) {
        return subArrayWithAtMostK(nums , k) - subArrayWithAtMostK(nums , k-1);   
    }

    private int subArrayWithAtMostK(int[] nums, int k) {
        Map<Integer , Integer> map = new HashMap<>();

        int left=0, right=0, ans=0;

        while(right < nums.length){
            map.put(nums[right] , map.getOrDefault(nums[right] , 0) + 1);

            while(map.size() > k){
                map.put(nums[left] , map.get(nums[left]) - 1);

                if (map.get(nums[left]) == 0) {
                    map.remove(nums[left]);
                }
                left++;
            }
            ans += right - left + 1;
            right++;
        }

        return ans;
    }
}
